# from slime.agent import Agent
# import osmnx as ox
# import random
# import matplotlib.pyplot as plt
#
#
# class Slime:
#
#     def __init__(self, G, min_x, max_x, min_y, max_y):
#         """
#         :param G: graph object
#
#         :param p: probability of selecting a set of agents
#         :param agent: agent ids
#         """
#         self.p = 0
#         self.agent = []
#
#         self.G = G
#
#         # self.gdf_nodes = ox.graph_to_gdfs(G, edges=False)
#
#         self.min_x = min_x
#
#         self.max_x = max_x
#
#         self.min_y = min_y
#
#         self.max_y = max_y
#
#         self.slime_node = None
#         self.slime_agent_ids = []
#
#     def update_slime(self):
#         self.slime_node = gdf_nodes[(gdf_nodes['geometry'].x >= self.min_x) &
#                                     (gdf_nodes['geometry'].x <= self.max_x) &
#                                     (gdf_nodes['geometry'].y >= self.min_y) &
#                                     (gdf_nodes['geometry'].y <= self.max_y)]
#         self.slime_agent_ids = [v['osmid'] for i, v in self.slime_node.iterrows()]
#
#     def select_and_execute_agents(self):
#         self.p = random.choice([1, 2, 3, 4])
#         nodes = []
#         if self.p == 1:
#             nodes = self.slime_node.sort_values(['x'])[-100:]
#         elif self.p == 2:
#             nodes = self.slime_node.sort_values(['y'])[-100:]
#         elif self.p == 3:
#             nodes = self.slime_node.sort_values(['x'])[:100]
#         elif self.p == 4:
#             nodes = self.slime_node.sort_values(['y'])[:100]
#
#         # initialising agent
#         for node in nodes:
#             # randomly assign vision for each agent for now
#             vision = random.choice([3, 4, 5])
#             agent = Agent(osmid=node['osmid'], vision=vision, G=self.G, slime_agent_ids=self.slime_agent_ids)
#             # execute active agent
#             agent.step()
#             self.slime_agent_ids.extend(agent.growth)
#
#     def step(self, time):
#         for i in range(time):
#             self.select_and_execute_agents()
#             self.slime_node = ox.graph_to_gdfs(self.G.subgraph(self.slime_agent_ids), edges=False).reset_index()
#
#     def draw(self):
#
#         gdf_nodes, gdf_edges = ox.graph_to_gdfs(self.G)
#         # print(len(self.slime_agent_ids))
#         slime = self.G.subgraph(self.slime_agent_ids)
#         slime_nodes, slime_edges = ox.graph_to_gdfs(slime)
#         print(len(slime_nodes))
#         fig, axe = plt.subplots(figsize=(20, 10))
#         # draw slime mould
#         slime_nodes.plot(ax=axe, color='#eb8634', markersize=(slime_nodes['street_count']), zorder=4)
#         slime_edges.plot(ax=axe, color='#f2c216', zorder=3)
#
#         # draw underlying city
#         gdf_nodes.plot(ax=axe, color='grey', markersize=(gdf_nodes['street_count']), zorder=2)
#         gdf_edges.plot(ax=axe, color='lightgrey', zorder=1)
#         plt.show()
